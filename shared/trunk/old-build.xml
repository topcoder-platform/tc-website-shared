<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="shared" basedir="." default="jar">

    <property name="rootdir" location="${basedir}/.." />
    <property name="dist" location="${basedir}/dist" />
    <property name="src.main" location="${basedir}/src/main" />
    <property name="src.test" location="${basedir}/src/test" />

    <property name="external.jars.path" location="${rootdir}/external-artifacts" />
    <property name="global-dist.artifacts" location="${rootdir}/dist/artifacts" />
    <property name="project.jars.path" location="${global-dist.artifacts}" />

    <property name="dist.artifacts" location="${dist}/artifacts" />
    <property name="dist.doc" location="${dist}/doc" />
    <property name="build" value="${dist}/classes" />
	
	<property name="svn.url.root" value="https://coder.topcoder.com/internal"/>

    <!-- - - - - - - - - - - - - - - - - -
          target: default-version
         - - - - - - - - - - - - - - - - - -->
    <target name="default-app.version" unless="app.version">
        <property name="app.version" value="SNAPSHOT" />
        <echo message="app.version: ${app.version}" />
    </target>

    <!-- - - - - - - - - - - - - - - - - -
          target: init
         - - - - - - - - - - - - - - - - - -->
    <target name="init" depends="default-app.version">
    	<mkdir dir="${global-dist.artifacts}" />
        <property file="build.properties" />

        <fileset id="external.jars.compile.fileset" dir="${external.jars.path}" includes="${external.jars.compile}" />
        <fileset id="project.jars.compile.fileset" dir="${project.jars.path}" includes="${project.jars.compile}" />
        <fileset id="project.jars.deploy.fileset" dir="${project.jars.path}" includes="${project.jars.compile}" />
        <fileset id="external.jars.deploy.fileset" dir="${external.jars.path}" includes="${external.jars.deploy}" />

        <property name="dist.zip" location="${dist}/${ant.project.name}-${app.version}.zip" />

        <path id="classpath.lib">
            <fileset refid="external.jars.compile.fileset" />
            <fileset refid="project.jars.compile.fileset" />
        </path>

        <path id="classpath.classes">
            <fileset dir="${build}" />
        </path>
    </target>

	
	<!-- - - - - - - - - - - - - - - - - -
	          target: checkout
	         - - - - - - - - - - - - - - - - - -->
	<target name="checkout" depends="init" description="checkouts dependencies">
		<taskdef name="svn" classname="org.tigris.subversion.svnant.SvnTask" classpath="${ant.library.dir}/svnant.jar"/>
		
		<mkdir dir="${external.jars.path}"/>
		<svn>
			<checkout url="${svn.url.root}/external-artifacts/trunk/nodelete.txt" destPath="${external.jars.path}" />
		    <update dir="${external.jars.path}">
		    	<fileset dir="${external.jars.path}">
		    	    <includesfile name="nofile ${external.jars.compile} ${external.jars.deploy}"/>
		    	</fileset>
		   </update>
	    </svn>
	</target>
	
    <!-- - - - - - - - - - - - - - - - - -
          target: compile
         - - - - - - - - - - - - - - - - - -->
    <target name="compile.properties" depends="init">
        <property name="compile.optimize" value="on" />
        <property name="compile.source" value="1.5" />
        <property name="compile.debug" value="on" />
    </target>

    <target name="compile" depends="compile.properties" unless="compile_set">
        <mkdir dir="${build}" />
        <property name="compile.source" value="1.5" />

        <javac destdir="${build}" srcdir="${src.main}"
                optimize="${compile.optimize}"
                source="${compile.source}"
                debug="${compile.debug}">

            <classpath refid="classpath.lib" />
            <include name="**/*.java" />
        </javac>
	<!-- This may be required by tcs -->
	<!--rmic classname="com.topcoder.shared.distCache.CacheClientImpl" base="${build}"/>
        <rmic classname="com.topcoder.shared.distCache.CacheServerSyncImpl" base="${build}"/-->

        <copy todir="${build}">
            <fileset dir="${src.main}">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
        <property name="compile_set" value="true"/>
    </target>

    <!-- - - - - - - - - - - - - - - - - -
             target: jar
            - - - - - - - - - - - - - - - - - -->
    <target name="jar-only" depends="compile" description="generates jar" unless="jar_shared_set">
        <mkdir dir="${dist}" />
        <mkdir dir="${dist.artifacts}" />
        <property name="jar.name" value="${dist.artifacts}/${ant.project.name}-${app.version}.jar" />
        <jar destfile="${jar.name}" duplicate="fail">
            <fileset dir="${build}" />
        </jar>
        <property name="jar_shared_set" value="true"/>
    </target>


    <!-- =================================
          target: zip
         ================================= -->
    <target name="zip-doc" depends="javadoc" unless="nodoc">
        <zip destfile="${dist.artifacts}/${ant.project.name}-doc-${app.version}.zip">
            <zipfileset dir="${dist.doc}" />
        </zip>
    </target>

    <target name="zip" depends="jar,zip-doc" description="Generates the jar, doc and the deployment properties. The generates a jar with all required files">
        <propertyfile file="${dist}/deployment.properties">
            <entry key="version" value="${app.version}" />
            <entry key="jars" value="${ant.project.name}-${app.version}.jar,${project.jars.deploy},${external.jars.deploy}" />
        </propertyfile>
        <zip destfile="${dist.zip}" duplicate="preserve">
            <zipfileset file="${dist.artifacts}/${ant.project.name}-doc-${app.version}.zip" />
            <zipfileset prefix="jars" refid="external.jars.deploy.fileset" />
            <zipfileset prefix="jars" file="${dist.artifacts}/${ant.project.name}-${app.version}.jar" />
            <zipfileset prefix="jars" refid="project.jars.deploy.fileset" />
            <zipfileset prefix="deployment" file="${dist}/deployment.properties" />
        </zip>
    </target>

    <!-- =================================
          target: dist
         ================================= -->
    <target name="dist" depends="zip,global" description="--> Generates all, and moves the jar to global dist"/>

    <target name="global" description="--> Move jars to global dist folder ">
        <mkdir dir="${global-dist.artifacts}" />
        <copy todir="${global-dist.artifacts}" flatten="true">
            <fileset file="${dist.artifacts}/${ant.project.name}-${app.version}.jar" />
        </copy>
    </target>


    <target name="jar" depends="jar-only,global" description="Generates jars and move it to global folder"/> 
    <!-- - - - - - - - - - - - - - - - - -
          target: clean
         - - - - - - - - - - - - - - - - - -->
    <target name="clean">
        <delete dir="${dist}"/>
    </target>

    <!-- =================================
          target: all
         ================================= -->
    <target name="all" depends="clean, dist" description="--> clean, dist"/>

    <!-- =================================
              target: javadoc
             ================================= -->
    <target name="javadoc" description="generate JavaDoc" unless="nodoc">
        <mkdir dir="${dist.doc}" />
        <javadoc
                access="public"
                author="true"
                classpathref="classpath.lib"
                destdir="${dist.doc}"
                nodeprecated="false"
                nodeprecatedlist="false"
                noindex="false"
                nonavbar="false"
                notree="false"
                packagenames="com.topcoder.*"
                source="1.5"
                sourcepath="src/main"
                splitindex="true"
                use="true"
                version="true">

            <link href="http://logging.apache.org/log4j/docs/api/" />
            <link href="http://java.sun.com/j2se/1.5/docs/api/" />
            <doctitle><![CDATA[<h1>Project Name</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright TopCoder Inc. 2008. All Rights Reserved.</i>]]></bottom>
        </javadoc>
    </target>
</project>
